wizard:
  name:
    description: 'Enter your project name'
    type: input

source:
  'package.json': >
    {
      "name": "#[{name}]",
      "type": "module",
      "devDependencies": {
        "@lmpx-config/eslint": "~0",
        "@lmpx-config/eslint": "~0",
        "@types/node": "^20",
        "eslint": "^8",
        "prettier": "^3",
        "typescript": "^5"
      }
    }
  'eslint.config.js': >
    export { default } from '@lmpx-config/eslint'

  '.prettierrc.mjs': >
    export { default } from '@lmpx-config/prettier'

  '.gitattributes': >
    /.yarn/**            linguist-vendored
    /.yarn/releases/*    binary
    /.yarn/plugins/**/*  binary
    /.pnp.*              binary linguist-generated

  '.editorconfig': >
    root = true

    [*]
    end_of_line = lf
    insert_final_newline = true
    charset = utf-8
    trim_trailing_whitespace = true

    [*.{js,cjs,mjs,jsx,ts,cts,mts,tsx,json,yml,yaml,toml,rs}]
    indent_style = tab
    indent_size = 1
    max_line_length = 100
    tab_width = 2
    ij_javascript_force_quote_style = true
    ij_typescript_force_quote_style = true
    ij_javascript_use_double_quotes = false
    ij_typescript_use_double_quotes = false
    ij_javascript_force_semicolon_style = true
    ij_typescript_force_semicolon_style = true
    ij_javascript_use_semicolon_after_statement = false
    ij_typescript_use_semicolon_after_statement = false
    ij_javascript_spaces_within_object_literal_braces = true
    ij_typescript_spaces_within_object_literal_braces = true
    ij_javascript_spaces_within_imports = true
    ij_typescript_spaces_within_imports = true
    ij_javascript_enforce_trailing_comma = whenmultiline
    ij_typescript_enforce_trailing_comma = whenmultiline
    ij_javascript_use_explicit_js_extension = auto
    ij_typescript_use_explicit_js_extension = auto

  '.gitignore': >
    # Logs
    logs
    *.log
    npm-debug.log*
    yarn-debug.log*
    yarn-error.log*
    lerna-debug.log*
    .pnpm-debug.log*

    # Diagnostic reports (https://nodejs.org/api/report.html)
    report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

    # Runtime data
    pids
    *.pid
    *.seed
    *.pid.lock

    # Dependency directories
    node_modules/

    # TypeScript cache
    *.tsbuildinfo

    # Optional npm cache directory
    .npm

    # Optional eslint cache
    .eslintcache

    # Yarn Integrity file
    .yarn-integrity

    # dotenv environment variable files
    .env
    .env.development.local
    .env.test.local
    .env.production.local
    .env.local

    # Next.js build output
    .next
    out

    # yarn v2
    .yarn/cache
    .yarn/unplugged
    .yarn/build-state.yml
    .yarn/install-state.gz
    .pnp.*

  'tsconfig.json': >
    {
      "compilerOptions": {
        "lib": [
          "dom",
          "dom.iterable",
          "esnext"
        ],
        "module": "esnext",
        "target": "esnext",
        "moduleResolution": "bundler",
        "moduleDetection": "force",
        "allowImportingTsExtensions": true,
        "noEmit": true,
        "composite": true,
        "strict": true,
        "downlevelIteration": true,
        "skipLibCheck": true,
        "jsx": "react-jsx",
        "allowSyntheticDefaultImports": true,
        "forceConsistentCasingInFileNames": true,
        "allowJs": true,
        "types": [
          "node"
        ]
      }
    }
