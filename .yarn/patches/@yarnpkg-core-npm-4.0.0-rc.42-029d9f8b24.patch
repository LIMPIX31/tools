diff --git a/lib/LightReport.js b/lib/LightReport.js
index c3c1c65c26dcf54882a2c5f1bf7bf88e15d3fd9a..6c7062a6da2a2c4ee8174df2fc9f1f2f36e84b80 100644
--- a/lib/LightReport.js
+++ b/lib/LightReport.js
@@ -62,7 +62,7 @@ class LightReport extends Report_1.Report {
     }
     reportError(name, text) {
         this.errorCount += 1;
-        this.stdout.write(`${formatUtils.pretty(this.configuration, `➤`, `redBright`)} ${this.formatNameWithHyperlink(name)}: ${text}\n`);
+        this.stdout.write(`${formatUtils.pretty(this.configuration, `│`, `redBright`)} ${this.formatName(name)} ${text}\n`);
     }
     reportProgress(progress) {
         const promise = Promise.resolve().then(async () => {
diff --git a/lib/MessageName.js b/lib/MessageName.js
index 00e73c8f50210d8b9268932301ec503fc60d5463..381a4ec9b180a3f2ae1f7e804bbb707dafec1985 100644
--- a/lib/MessageName.js
+++ b/lib/MessageName.js
@@ -102,7 +102,7 @@ var MessageName;
     MessageName[MessageName["CONSTRAINTS_CHECK_FAILED"] = 84] = "CONSTRAINTS_CHECK_FAILED";
 })(MessageName = exports.MessageName || (exports.MessageName = {}));
 function stringifyMessageName(name) {
-    return `YN${name.toString(10).padStart(4, `0`)}`;
+    return `${name.toString(10).padStart(4, `0`)}`;
 }
 exports.stringifyMessageName = stringifyMessageName;
 function parseMessageName(messageName) {
diff --git a/lib/StreamReport.js b/lib/StreamReport.js
index 976f0ed6b833709e238656f99a6ec026ae216a05..7fce09cb748928f6e291fe228695746ec761a554 100644
--- a/lib/StreamReport.js
+++ b/lib/StreamReport.js
@@ -28,26 +28,26 @@ const makeRecord = (obj) => obj;
 const PROGRESS_STYLES = makeRecord({
     patrick: {
         date: [17, 3],
-        chars: [`🍀`, `🌱`],
-        size: 40,
+        chars: [`━`, `━`],
+        size: 80,
     },
     simba: {
         date: [19, 7],
-        chars: [`🦁`, `🌴`],
-        size: 40,
+        chars: [`━`, `━`],
+        size: 80,
     },
     jack: {
         date: [31, 10],
-        chars: [`🎃`, `🦇`],
-        size: 40,
+        chars: [`━`, `━`],
+        size: 80,
     },
     hogsfather: {
         date: [31, 12],
-        chars: [`🎉`, `🎄`],
-        size: 40,
+        chars: [`━`, `━`],
+        size: 80,
     },
     default: {
-        chars: [`=`, `-`],
+        chars: [`━`, `━`],
         size: 80,
     },
 });
@@ -62,12 +62,7 @@ function formatName(name, { configuration, json }) {
         return ``;
     const num = name === null ? 0 : name;
     const label = (0, MessageName_1.stringifyMessageName)(num);
-    if (!json && name === null) {
-        return formatUtils.pretty(configuration, label, `grey`);
-    }
-    else {
-        return label;
-    }
+    return formatUtils.pretty(configuration, label, `grey`);
 }
 exports.formatName = formatName;
 function formatNameWithHyperlink(name, { configuration, json }) {
@@ -143,7 +138,7 @@ class StreamReport extends Report_1.Report {
             if (!Object.prototype.hasOwnProperty.call(PROGRESS_STYLES, styleName))
                 throw new Error(`Assertion failed: Invalid progress bar style`);
             this.progressStyle = PROGRESS_STYLES[styleName];
-            const PAD_LEFT = `➤ YN0000: ┌ `.length;
+            const PAD_LEFT = `0000 ┌ `.length;
             const maxWidth = Math.max(0, Math.min(stdout.columns - PAD_LEFT, 80));
             this.progressMaxScaledSize = Math.floor(this.progressStyle.size * maxWidth / 80);
         }
@@ -224,7 +219,7 @@ class StreamReport extends Report_1.Report {
         return {
             cb: realCb,
             reportHeader: () => {
-                this.reportInfo(null, `┌ ${what}`);
+                this.reportInfo(null, `\x1b[0;90m┌\x1b[39m ${what}`);
                 this.indent += 1;
                 if (GROUP !== null && !this.json && this.includeInfos) {
                     this.stdout.write(GROUP.start(what));
@@ -235,10 +230,10 @@ class StreamReport extends Report_1.Report {
                 if (GROUP !== null && !this.json && this.includeInfos)
                     this.stdout.write(GROUP.end(what));
                 if (this.configuration.get(`enableTimers`) && elapsedTime > 200) {
-                    this.reportInfo(null, `└ Completed in ${formatUtils.pretty(this.configuration, elapsedTime, formatUtils.Type.DURATION)}`);
+                    this.reportInfo(null, `\x1b[0;90m└\x1b[39m Completed in ${formatUtils.pretty(this.configuration, elapsedTime, formatUtils.Type.DURATION)}`);
                 }
                 else {
-                    this.reportInfo(null, `└ Completed`);
+                    this.reportInfo(null, `\x1b[0;90m└\x1b[39m Completed`);
                 }
             },
             skipIfEmpty: realOpts.skipIfEmpty,
@@ -281,9 +276,9 @@ class StreamReport extends Report_1.Report {
         if (!this.includeInfos)
             return;
         this.commit();
-        const formattedName = this.formatNameWithHyperlink(name);
-        const prefix = formattedName ? `${formattedName}: ` : ``;
-        const message = `${this.formatPrefix(prefix, `blueBright`)}${text}`;
+        const formattedName = this.formatName(name);
+        const prefix = formattedName ? `${formattedName} ` : ``;
+        const message = `${this.formatPrefix(prefix, `blueBright`, 2)}${text}`;
         if (!this.json) {
             if (this.forgettableNames.has(name)) {
                 this.forgettableLines.push(message);
@@ -301,7 +296,7 @@ class StreamReport extends Report_1.Report {
             }
         }
         else {
-            this.reportJson({ type: `info`, name, displayName: this.formatName(name), indent: this.formatIndent(), data: text });
+            this.reportJson({ type: `info`, name, displayName: this.formatName(name), indent: this.formatIndent(2), data: text });
         }
     }
     reportWarning(name, text) {
@@ -309,25 +304,25 @@ class StreamReport extends Report_1.Report {
         if (!this.includeWarnings)
             return;
         this.commit();
-        const formattedName = this.formatNameWithHyperlink(name);
-        const prefix = formattedName ? `${formattedName}: ` : ``;
+        const formattedName = this.formatName(name);
+        const prefix = formattedName ? `${formattedName} ` : ``;
         if (!this.json) {
-            this.writeLineWithForgettableReset(`${this.formatPrefix(prefix, `yellowBright`)}${text}`);
+            this.writeLineWithForgettableReset(`${this.formatPrefix(prefix, `yellowBright`, 1)}${text}`);
         }
         else {
-            this.reportJson({ type: `warning`, name, displayName: this.formatName(name), indent: this.formatIndent(), data: text });
+            this.reportJson({ type: `warning`, name, displayName: this.formatName(name), indent: this.formatIndent(1), data: text });
         }
     }
     reportError(name, text) {
         this.errorCount += 1;
         this.commit();
-        const formattedName = this.formatNameWithHyperlink(name);
-        const prefix = formattedName ? `${formattedName}: ` : ``;
+        const formattedName = this.formatName(name);
+        const prefix = formattedName ? `${formattedName} ` : ``;
         if (!this.json) {
-            this.writeLineWithForgettableReset(`${this.formatPrefix(prefix, `redBright`)}${text}`, { truncate: false });
+            this.writeLineWithForgettableReset(`${this.formatPrefix(prefix, `redBright`, 0)}${text}`, { truncate: false });
         }
         else {
-            this.reportJson({ type: `error`, name, displayName: this.formatName(name), indent: this.formatIndent(), data: text });
+            this.reportJson({ type: `error`, name, displayName: this.formatName(name), indent: this.formatIndent(0), data: text });
         }
     }
     reportProgress(progressIt) {
@@ -478,12 +473,12 @@ class StreamReport extends Report_1.Report {
             if (typeof progress.lastScaledSize !== `undefined`) {
                 const ok = this.progressStyle.chars[0].repeat(progress.lastScaledSize);
                 const ko = this.progressStyle.chars[1].repeat(this.progressMaxScaledSize - progress.lastScaledSize);
-                progressBar = ` ${ok}${ko}`;
+                progressBar = ` \x1b[0;32m${ok}\x1b[38;5;243m${ko}`;
             }
             const formattedName = this.formatName(null);
-            const prefix = formattedName ? `${formattedName}: ` : ``;
+            const prefix = formattedName ? `${formattedName} \x1b[0;90m│\x1b[39m` : ``;
             const title = progress.definition.title ? ` ${progress.definition.title}` : ``;
-            this.stdout.write(`${formatUtils.pretty(this.configuration, `➤`, `blueBright`)} ${prefix}${spinner}${progressBar}${title}\n`);
+            this.stdout.write(`${prefix}${spinner}${progressBar}${title}\n`);
         }
         this.progressTimeout = setTimeout(() => {
             this.refreshProgress({ force: true });
@@ -534,8 +529,8 @@ class StreamReport extends Report_1.Report {
             json: this.json,
         });
     }
-    formatPrefix(prefix, caretColor) {
-        return this.includePrefix ? `${formatUtils.pretty(this.configuration, `➤`, caretColor)} ${prefix}${this.formatIndent()}` : ``;
+    formatPrefix(prefix, caretColor, level) {
+        return this.includePrefix ? `${prefix}${this.formatIndent(level)}` : ``;
     }
     formatNameWithHyperlink(name) {
         if (!this.includeNames)
@@ -545,8 +540,12 @@ class StreamReport extends Report_1.Report {
             json: this.json,
         });
     }
-    formatIndent() {
-        return `│ `.repeat(this.indent);
+    formatIndent(level) {
+        switch (level) {
+            case 0: return `\x1b[0;31m│\x1b[39m `.repeat(this.indent);
+            case 1: return `\x1b[0;33m│\x1b[39m `.repeat(this.indent);
+            case 2: return `\x1b[0;36m│\x1b[39m `.repeat(this.indent);
+        }
     }
 }
 exports.StreamReport = StreamReport;
